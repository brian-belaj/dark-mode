{"ast":null,"code":"var _jsxFileName = \"/home/brian/Documenti/react/esercizi corso react/react-tutorial-base/dark-mode/inizio/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport data from \"./data\";\nimport Articolo from \"./Articolo\"; //Funzione che se presente 'Theme' nel localStorage\n// returna il suo valore o di default return 'light-mode'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFromLocalStorage = () => {\n  if (localStorage.getItem(\"theme\")) {\n    return localStorage.getItem(\"theme\");\n  } else {\n    return \"light-mode\";\n  }\n};\n\nfunction App() {\n  _s();\n\n  //Stato iniziale per la nostra modalità\n  const [theme, setTheme] = useState(getFromLocalStorage()); //Cambia il valore dello staate theme\n\n  const cambiaTema = () => {\n    if (theme === \"light-mode\") {\n      setTheme(\"dark-mode\");\n    } else {\n      setTheme(\"light-mode\");\n    }\n  };\n\n  useEffect(() => {\n    //Attacca classe al html tag\n    document.documentElement.className = theme; //inserisco valore di theme nel localStorage ogni volta viene mutato il suo state\n\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: cambiaTema,\n        children: \"Cambia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"article-section\",\n        children: [data.map(el => /*#__PURE__*/_jsxDEV(Articolo, { ...el\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DZjR+V9DxcluS65Oxlv4d8lgroY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/brian/Documenti/react/esercizi corso react/react-tutorial-base/dark-mode/inizio/src/App.js"],"names":["useState","useEffect","data","Articolo","getFromLocalStorage","localStorage","getItem","App","theme","setTheme","cambiaTema","document","documentElement","className","setItem","map","el","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACA;;;;AACA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC,WAAOD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD,GAFD,MAEO;AACL,WAAO,YAAP;AACD;AACF,CAND;;AAQA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACI,mBAAmB,EAApB,CAAlC,CAFa,CAIb;;AACA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAIF,KAAK,KAAK,YAAd,EAA4B;AAC1BC,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACD;AACF,GAND;;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqCL,KAArC,CAFc,CAId;;AACAH,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BN,KAA9B;AACD,GANQ,EAMN,CAACA,KAAD,CANM,CAAT;AAOA,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA,mBACCR,IAAI,CAACa,GAAL,CAAUC,EAAD,iBACR,QAAC,QAAD,OAA0BA;AAA1B,WAAeA,EAAE,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADD,CADD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnCQV,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport data from \"./data\";\nimport Articolo from \"./Articolo\";\n\n//Funzione che se presente 'Theme' nel localStorage\n// returna il suo valore o di default return 'light-mode'\nconst getFromLocalStorage = () => {\n  if (localStorage.getItem(\"theme\")) {\n    return localStorage.getItem(\"theme\");\n  } else {\n    return \"light-mode\";\n  }\n};\n\nfunction App() {\n  //Stato iniziale per la nostra modalità\n  const [theme, setTheme] = useState(getFromLocalStorage());\n\n  //Cambia il valore dello staate theme\n  const cambiaTema = () => {\n    if (theme === \"light-mode\") {\n      setTheme(\"dark-mode\");\n    } else {\n      setTheme(\"light-mode\");\n    }\n  };\n\n  useEffect(() => {\n    //Attacca classe al html tag\n    document.documentElement.className = theme;\n\n    //inserisco valore di theme nel localStorage ogni volta viene mutato il suo state\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  return (\n    <section className=\"section-center\">\n      <div className=\"container\">\n      <button className=\"btn\" onClick={cambiaTema}>\n          Cambia\n        </button>\n      <section className=\"article-section\">\n      {data.map((el) => (\n        <Articolo key={el.id} {...el}/> \n      ))} {/*Con lo spread operator (...el) diciamo di utilizzare tutti gli elementi dell'oggetto*/} \n      </section>\n        \n      </div>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}